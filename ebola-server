#!/usr/bin/env python3
"""Start the ebola server

Usage:
ebola-server [--root=ROOT] set-configuration <name>
ebola-server [--root=ROOT] start
ebola-server [--root=ROOT] stop
ebola-server [--root=ROOT] configure
ebola-server [--root=ROOT] update-passwords
ebola-server [--root=ROOT] status
"""


import os
import os.path
import sys

import docopt

CONFIG_FILE = "conf/default.json"


def set_configuration(name):
    print("Setting configuration to: {}".format(name))
    dest = "{}.json".format(name)
    dest_full = os.path.join("conf", dest)
    if not os.path.exists(dest_full):
        raise Exception("Configuration does not exist: " + dest_full)
    if os.path.exists(CONFIG_FILE):
        os.remove(CONFIG_FILE)
    os.symlink(dest, CONFIG_FILE)
    print("...OK")


def set_root(root):
    root = os.path.abspath(root or os.path.dirname(sys.argv[0]))
    sys.path.insert(1, root + "/src")


def start(name):
    deploy.start(CONFIG_FILE)


def stop():
    deploy.stop(CONFIG_FILE)


def configure():
    s = deploy.get_service(CONFIG_FILE)
    deploy.configure(s)


def update_passwords():
    s = deploy.get_service(CONFIG_FILE)
    deploy.configure_proxy_users(s)


def status():
    s = deploy.get_service(CONFIG_FILE)
    st = s.status
    print(st if st else "not running")


if __name__ == "__main__":
    args = docopt.docopt(__doc__)
    root = args["--root"]

    set_root(root)
    import deploy

    if args["set-configuration"]:
        set_configuration(args["<name>"])
    else:
        if not os.path.exists(CONFIG_FILE):
            sys.exit("ERROR: Set a configuration with set_configuration first")

        if args["start"]:
            start(args)
        elif args["stop"]:
            stop()
        elif args["update-passwords"]:
            update_passwords()
        elif args["configure"]:
            configure()
        elif args["status"]:
            status()
